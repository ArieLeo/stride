// Copyright (c) Xenko contributors (https://xenko.com) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
/// <summary>
/// Computes normals in view space.
/// </summary>
shader NormalFromNormalMappingNoTangent : NormalBase, Transformation
{
    override stage void GenerateNormal_PS()
    {
        // Normalize just once the normal coming from the vertex shader
        if (dot(streams.normalWS, streams.normalWS) > 0)
            streams.normalWS = normalize(streams.normalWS);
        streams.meshNormalWS = streams.normalWS;
    }
    
    stage override void UpdateNormalFromTangentSpace(float3 normalInTangentSpace)
    {
        streams.normalWS = mul(normalInTangentSpace, (float3x3)WorldInverseTranspose);
    }
};
